// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../src/app/about/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/about">> = Specific
  const handler = {} as typeof import("../../src/app/about/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/ai-machine-learning-solutions/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/ai-machine-learning-solutions">> = Specific
  const handler = {} as typeof import("../../src/app/ai-machine-learning-solutions/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/big-data-analytics-platform/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/big-data-analytics-platform">> = Specific
  const handler = {} as typeof import("../../src/app/big-data-analytics-platform/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/cloud-infrastructure-services/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/cloud-infrastructure-services">> = Specific
  const handler = {} as typeof import("../../src/app/cloud-infrastructure-services/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/condition-based-maintenance/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/condition-based-maintenance">> = Specific
  const handler = {} as typeof import("../../src/app/condition-based-maintenance/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/condition-based-monitoring/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/condition-based-monitoring">> = Specific
  const handler = {} as typeof import("../../src/app/condition-based-monitoring/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/contact/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/contact">> = Specific
  const handler = {} as typeof import("../../src/app/contact/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/data-management-storage/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/data-management-storage">> = Specific
  const handler = {} as typeof import("../../src/app/data-management-storage/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/digital-twin-technology/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/digital-twin-technology">> = Specific
  const handler = {} as typeof import("../../src/app/digital-twin-technology/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/failure-modes-effects-analysis/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/failure-modes-effects-analysis">> = Specific
  const handler = {} as typeof import("../../src/app/failure-modes-effects-analysis/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/failure-prediction-models/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/failure-prediction-models">> = Specific
  const handler = {} as typeof import("../../src/app/failure-prediction-models/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/human-reliability-analysis/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/human-reliability-analysis">> = Specific
  const handler = {} as typeof import("../../src/app/human-reliability-analysis/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/industry-4-solutions/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/industry-4-solutions">> = Specific
  const handler = {} as typeof import("../../src/app/industry-4-solutions/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/iot-implementation-integration/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/iot-implementation-integration">> = Specific
  const handler = {} as typeof import("../../src/app/iot-implementation-integration/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/maintenance-team-training/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/maintenance-team-training">> = Specific
  const handler = {} as typeof import("../../src/app/maintenance-team-training/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/our-founder/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/our-founder">> = Specific
  const handler = {} as typeof import("../../src/app/our-founder/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/predictive-analytics-platform/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/predictive-analytics-platform">> = Specific
  const handler = {} as typeof import("../../src/app/predictive-analytics-platform/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/predictive-maintenance-planning/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/predictive-maintenance-planning">> = Specific
  const handler = {} as typeof import("../../src/app/predictive-maintenance-planning/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/predictive-maintenance/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/predictive-maintenance">> = Specific
  const handler = {} as typeof import("../../src/app/predictive-maintenance/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/process-automation-rpa/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/process-automation-rpa">> = Specific
  const handler = {} as typeof import("../../src/app/process-automation-rpa/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/professional-training/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/professional-training">> = Specific
  const handler = {} as typeof import("../../src/app/professional-training/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/real-time-monitoring/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/real-time-monitoring">> = Specific
  const handler = {} as typeof import("../../src/app/real-time-monitoring/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/reliability-centered-maintenance/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/reliability-centered-maintenance">> = Specific
  const handler = {} as typeof import("../../src/app/reliability-centered-maintenance/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/reliability-engineering/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/reliability-engineering">> = Specific
  const handler = {} as typeof import("../../src/app/reliability-engineering/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/reliability-predictions-analysis/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/reliability-predictions-analysis">> = Specific
  const handler = {} as typeof import("../../src/app/reliability-predictions-analysis/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/reliability-testing-validation/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/reliability-testing-validation">> = Specific
  const handler = {} as typeof import("../../src/app/reliability-testing-validation/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/root-cause-analysis/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/root-cause-analysis">> = Specific
  const handler = {} as typeof import("../../src/app/root-cause-analysis/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/services/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/services">> = Specific
  const handler = {} as typeof import("../../src/app/services/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/spare-parts-optimization/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/spare-parts-optimization">> = Specific
  const handler = {} as typeof import("../../src/app/spare-parts-optimization/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api/contact/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/contact">> = Specific
  const handler = {} as typeof import("../../src/app/api/contact/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../src/app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
