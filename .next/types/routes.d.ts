// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/about" | "/ai-machine-learning-solutions" | "/big-data-analytics-platform" | "/cloud-infrastructure-services" | "/condition-based-maintenance" | "/condition-based-monitoring" | "/contact" | "/data-management-storage" | "/digital-twin-technology" | "/failure-modes-effects-analysis" | "/failure-prediction-models" | "/human-reliability-analysis" | "/industry-4-solutions" | "/iot-implementation-integration" | "/maintenance-team-training" | "/our-founder" | "/predictive-analytics-platform" | "/predictive-maintenance" | "/predictive-maintenance-planning" | "/process-automation-rpa" | "/professional-training" | "/real-time-monitoring" | "/reliability-centered-maintenance" | "/reliability-engineering" | "/reliability-predictions-analysis" | "/reliability-testing-validation" | "/root-cause-analysis" | "/services" | "/spare-parts-optimization"
type AppRouteHandlerRoutes = "/api/contact"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/about": {}
  "/ai-machine-learning-solutions": {}
  "/api/contact": {}
  "/big-data-analytics-platform": {}
  "/cloud-infrastructure-services": {}
  "/condition-based-maintenance": {}
  "/condition-based-monitoring": {}
  "/contact": {}
  "/data-management-storage": {}
  "/digital-twin-technology": {}
  "/failure-modes-effects-analysis": {}
  "/failure-prediction-models": {}
  "/human-reliability-analysis": {}
  "/industry-4-solutions": {}
  "/iot-implementation-integration": {}
  "/maintenance-team-training": {}
  "/our-founder": {}
  "/predictive-analytics-platform": {}
  "/predictive-maintenance": {}
  "/predictive-maintenance-planning": {}
  "/process-automation-rpa": {}
  "/professional-training": {}
  "/real-time-monitoring": {}
  "/reliability-centered-maintenance": {}
  "/reliability-engineering": {}
  "/reliability-predictions-analysis": {}
  "/reliability-testing-validation": {}
  "/root-cause-analysis": {}
  "/services": {}
  "/spare-parts-optimization": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
